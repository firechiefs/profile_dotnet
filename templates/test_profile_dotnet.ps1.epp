<%- | String $success_color, String $error_color, Integer $validation_data | -%>
# generated by profile/templates/test_dotnet.ps1.epp

# variables passed in via PROFILE_DOTNET
$ConsoleSuccess = "<%= $success_color %>"
$ConsoleError   = "<%= $error_color %>"
$DotNET4Release = "<%= $validation_data %>"

# Registry key path where .NET info is stored
# https://msdn.microsoft.com/en-us/library/hh925568(v=vs.110).aspx
$ndpDirectory = 'hklm:\SOFTWARE\Microsoft\NET Framework Setup\NDP\'

$v4Directory = "$ndpDirectory\v4\Full" # path for .NET 4.x.x versions
# let's see if registry path exists
if (Test-Path $v4Directory) {
    # path exists. Let's determine .NET release
    $CurrentRelease = (Get-ItemProperty $v4Directory).Release
    if ( $CurrentRelease -ge  $DotNET4Release ) {
      # .NET 4.x.x release matches hiera. PASS!!!
      write-host "PASS: PROFILE_DOTNET .NET 4 relase", $CurrentRelease, "is greater than or equal to ", $DotNET4Release -ForegroundColor $ConsoleSuccess
    }
    else {
      # .NET 4.x.x is installed but release does not match heira. FAIL!!!
      write-host "FAIL: PROFILE_DOTNET .NET 4 relase", $CurrentRelease, "is less than ", $DotNET4Release -ForegroundColor $ConsoleError
    }
}
else {
  # .NET 4.x.x not installed. EPIC FAIL!!!
  write-host "FAIL: PROFILE_DOTNET .NET 4 relase", $CurrentRelease, "does not match ", $DotNET4Release -ForegroundColor $ConsoleError
}
